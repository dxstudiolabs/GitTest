package com.onestopsolutions.master.frameworks.retrofit;import com.onestopsolutions.master.bean.GrossIncome;import com.onestopsolutions.master.bean.LoginRequest;import com.onestopsolutions.master.bean.LoginResponse;import com.onestopsolutions.master.bean.NetIncome;import com.onestopsolutions.master.bean.Order;import com.onestopsolutions.master.bean.Tax;import com.onestopsolutions.master.bean.User;import java.util.List;import retrofit2.Call;import retrofit2.http.Body;import retrofit2.http.GET;import retrofit2.http.Header;import retrofit2.http.POST;import retrofit2.http.Query;public interface WebServices {    static final String TOKEN = "OneSS_TOKEN";    @POST("login")    public Call<LoginResponse> login(@Body LoginRequest loginRequest);    @POST("login?")    public Call<LoginResponse> login(@Query("userID") String userName, @Query("password") String passWord);    @GET("user/grossIncome/")    public Call<List<GrossIncome>> getGrossIncome(@Header(TOKEN) String header, @Query("startDate") String startDate, @Query("endDate") String endDate, @Query("duration") String duration, @Query("bookType") String bookType, @Query("bookName") String bookName);    @GET("user/netINCOME/")    public Call<List<NetIncome>> getNetIncome(@Header(TOKEN) String header, @Query("startDate") String startDate, @Query("endDate") String endDate, @Query("duration") String duration, @Query("bookType") String bookType, @Query("bookName") String bookName);    @GET("user/tax/")    public Call<List<Tax>> getTax(@Header(TOKEN) String header, @Query("startDate") String startDate, @Query("endDate") String endDate, @Query("duration") String duration, @Query("bookType") String bookType, @Query("bookName") String bookName);    @GET("user/userList/")    public Call<List<User>> getUsers(@Header(TOKEN) String header, @Query("startDate") String startDate, @Query("endDate") String endDate, @Query("duration") String duration, @Query("bookType") String bookType, @Query("bookName") String bookName);    @GET("user/user/")    public Call<List<Order>> getOrdersForUser(@Header(TOKEN) String header, @Query("startDate") String startDate, @Query("endDate") String endDate, @Query("duration") String duration, @Query("bookType") String bookType, @Query("bookName") String bookName, @Query("id") String id);}